name: Deploy part3 to GKE

on:
  push:
    paths:
      - "part3/**"  # Trigger workflow only for changes under part3
      - ".github/**" # Trigger for changes in the workflow

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGEBACKEND: todo-backend
  IMAGEFRONT: todo-app

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy part3 to GKE
    runs-on: ubuntu-latest
    environment: default

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Configure Docker for GCP
        run: gcloud --quiet auth configure-docker

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate with GKE
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Build and Push Todo Backend Image
        run: |-
          docker build --platform=linux/amd64 --t "gcr.io/$PROJECT_ID/$IMAGEBACKEND:$BRANCH-$GITHUB_SHA" ./part3/todo/todo_backend
          docker push "gcr.io/$PROJECT_ID/$IMAGEBACKEND:$BRANCH-$GITHUB_SHA"

      - name: Build and Push Todo App Image
        run: |-
          docker build --platform=linux/amd64 --t "gcr.io/$PROJECT_ID/$IMAGEFRONT:$BRANCH-$GITHUB_SHA" ./part3/todo/todo-app
          docker push "gcr.io/$PROJECT_ID/$IMAGEFRONT:$BRANCH-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy
        run: |-
          cd ./part3/todo
          cd todo-app && kustomize edit set image PROJECT/IMAGEBACK=gcr.io/$PROJECT_ID/$IMAGEBACKEND:$BRANCH-$GITHUB_SHA
          cd ..
          cd todo-backend && kustomize edit set image PROJECT/IMAGEFRONT=gcr.io/$PROJECT_ID/$IMAGEFRONT:$BRANCH-$GITHUB_SHA
          cd ..
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$IMAGEBACKEND -n project
          kubectl rollout status deployment/$IMAGEFRONT -n project

